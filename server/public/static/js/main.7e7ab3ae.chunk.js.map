{"version":3,"sources":["services/AuthService.js","components/navbar/Navbar.js","components/auth/Signup.js","components/auth/Login.js","services/WishesService.js","components/WishItems/WishItems.js","components/NewWish/NewWish.js","components/WishList/WishList.js","components/contents/Contents.js","components/SingleWish/SingleWish.js","App.js","components/Finances/Finances.js","serviceWorker.js","index.js"],"names":["AuthService","signup","username","password","service","post","then","response","data","login","loggedin","get","logout","this","axios","create","baseURL","process","REACT_APP_API","withCredentials","Navbar","props","handleLogout","e","state","loggedInUser","nextProps","setState","className","onClick","to","Component","Signup","handleFormSubmit","event","console","log","preventDefault","getUser","user","catch","error","handleChange","target","name","value","onSubmit","class","type","onChange","Login","Service","React","getAllWishes","newWish","title","description","price","date","deadline","wishGranted","getOneWish","id","NewWish","image","getNewWish","wish","WishesService","checked","WishList","wishes","length","Fragment","Contents","App","userObj","fetchUser","err","src","userInSession","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7e7ab3ae.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API}/auth`,//???????????????????\n      withCredentials: true\n    });\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/signup', {username, password})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentUser',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.post('/logout',)\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../../services/AuthService\";\nimport \"./Navbar.css\"\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <nav className=\"nav-style\">\n        {/* <image src=\"/public/images/pinklogo.png\" width= \"100\"></image> */}\n          <ul>\n            <li>\n              <a onClick={this.handleLogout}>Logout</a>\n            </li>\n          </ul>\n\n          <div className=\"header\">\n            {/* <img src={logo} alt=\"\" height=\"100\"/> */}\n            <h2>Welcome {this.state.loggedInUser.username}, esta es tu area privada</h2>\n          </div>\n        </nav>\n      );\n    } else {\n      return (\n        <div>\n          <nav className=\"nav-style\">\n            <ul>\n              <li>\n                <Link to=\"/signup\">Signup</Link>\n              </li>\n              <li>\n                <Link to=\"/login\">Login</Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Navbar;","// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from '../../services/AuthService'\nimport \"./Signup.scss\";\n\n//signup y login son iguales a excepción de el html renderizado y el endpoint de nuestra API rest a la que llamamos\n//uno llama a /signup y el otro a /login usando nuestro AuthService\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n    \n  handleFormSubmit = (event) => {\n      console.log(event)\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    console.log(this.state, username, password)\n\n    //aquí llamamos al endpoint /signup de nuestra API Rest usando nuestro AuthService\n    this.service.signup(username, password)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getUser(response.user)\n    })\n    .catch(error => {\n      this.setState({\n        username: username,\n        password: password,\n        error: true\n      });\n    })\n}\n\nhandleChange = (event) => {  \n  const {name, value} = event.target;\n  this.setState({[name]: value});\n}\n    \n\nrender() {\n  return(\n    <div>\n      <h3>Welcome!,to stop being a compulsive shopper create an account next:</h3>\n\n      <form onSubmit={this.handleFormSubmit}>\n        <fieldset>\n          <label>Username </label>\n          <input class=\"input-signup\" type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n        </fieldset>\n        \n        <fieldset>\n          <label>Password   </label>\n          <input class=\"input-signup\" type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n        </fieldset>\n        \n        <input class=\"submit\" type=\"submit\" value=\"Sign up\" />\n      </form>\n\n      <h1>{this.state.error ? 'Error' : ''}</h1>\n    </div>\n  )\n}\n}\n\nexport default Signup;","// auth/Signup.js\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../../services/AuthService'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response)\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n\n    return (<div>\n      <h3>Please, login to our site</h3>\n\n      <form onSubmit={this.handleFormSubmit}>\n        <fieldset>\n          <label>Username \n          </label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <fieldset>\n          <label>Password </label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <input type=\"submit\" value=\"Login\" />\n      </form>\n\n      <h1>{this.state.error ? 'Error' : ''}</h1>\n    </div>)\n  }\n}\n\nexport default Login;","import axios from 'axios';\n\nclass Service {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API}/wishes`,//'http://localhost:5000/api/wishes',//???????????????????\n      withCredentials: true\n    });\n  }\n  getAllWishes =  () => {\n    return this.service.get('/all')\n    .then(response => response.data)\n  }\n\n  newWish = (title, description, price, date, deadline, wishGranted) => {\n    return this.service.post('/new', {title, description, price, date, deadline, wishGranted})\n    .then(response => response.data)\n  }\n\n\n  getOneWish = (id) => {\n    return this.service.get('/' + id)\n    .then(response => response.data)\n  }\n}\n\n\n\n\n\nexport default Service;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nexport default class WishItems extends React.Component {\n \n    render() {\n        console.log(this.props._id)\n        return (\n            <div>\n                <ul>\n                    <li>\n                        <Link to={`/wishes/${this.props._id}`}>\n                            {this.props.title} price:{this.props.price}€\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\nimport WishesService from '../../services/WishesService'\nclass NewWish extends Component {\n\n  constructor(props){\n      super(props);\n         this.state = { \n        title: '',\n        description: '',\n        price: 0,\n        date: '',\n        deadline: '',\n        image:'',\n        wishGranted:''\n      };\n      this.service = new WishesService();\n  }\n\n  handleFormSubmit = (event) => {\n      console.log(event)\n      event.preventDefault();\n      const title = this.setState.title;\n      const description = this.setState.description;\n      const price = this.setState.price;\n      const date = this.setState.date;\n      const deadline = this.setState.deadline;\n      const image = this.setState.image;\n      const wishGranted = this.setState.wishGranted;\n\n\n      console.log(this.state, title, description, price, image)\n\n\n      this.service.newWish(title, description, price, date, deadline, wishGranted)\n      .then( response => {\n          this.setState({\n            title: '',\n            description: '',\n            price: 0,\n            date: '',\n            deadline: '',\n            image:'',\n            wishGranted:'' \n          })\n          this.props.getNewWish(response.wish)\n        })\n          .catch(error => {\n              this.setState({\n            title: title,\n            description: description,\n            price: price,\n            date: date,\n            deadline: deadline,\n            image: image,\n            wishGranted:wishGranted,\n            error: true \n              })\n          })\n      }\n\n    handleChange = (event) => {\n        const {name, value} = event.target;\n        this.setState({[name]: value});\n    }\n\n\n\n\n  render(){\n    return (\n      <div>\n      <h3>introduce a new wish</h3>\n      <form onSubmit={this.handleFormSubmit}>\n          <label>Title:</label>\n          <input type=\"text\" name=\"title\" value={this.state.title} />\n\n          <label>Description:</label>\n          <input type=\"text\" name=\"description\" value={this.state.description} />\n\n          <label>Price:</label>\n          <input type=\"text\" name=\"price\" checked={this.state.price} />\n          \n          <label>date</label>\n          <input type=\"text\" name=\"date\" value={this.state.date} />\n\n          <label>deadline</label>\n          <input type=\"text\" name=\"deadline\" value={this.state.deadline} />\n\n          <label>Image</label>\n          <input type=\"text\" name=\"image\" value={this.state.image} />\n          \n          <label>Wish Granted:</label>\n          <input type=\"text\" name=\"wishGranted\" value={this.state.wishGranted} />\n          \n          <input type=\"submit\" value=\"Submit\" />\n      </form>\n      <h1>{this.state.error ? 'Error' : ''}</h1>\n    </div>\n    )\n  }\n}\n\nexport default NewWish;","import React from 'react';\nimport \"./WishList.scss\";\nimport WishItems from \"../WishItems/WishItems\";\nimport WishesService from '../../services/WishesService';\nimport NewWish from '../NewWish/NewWish';\n\n\nexport default class WishList extends React.Component {\n    constructor(props){\n      super(props)\n      this.service = new WishesService()\n      this.state = {\n          wishes: []\n      }\n    }\n\n    componentDidMount() {\n      this.service.getAllWishes()\n      .then(response => {\n        this.setState({\n          wishes: response\n        })\n      })\n    }\n\n    render() {\n    return (\n        <section className=\"wishlist\">\n\n        <NewWish>Add a new Wish🧞</NewWish>\n            {this.state.wishes.length > 0 && (\n            <React.Fragment>\n              <h1>Wish List {this.state.wishes.length}</h1>\n              <ul>\n                {/* {this.state.wishes.map(wish => (\n                    <WishItems {...wish} key={wish._id}></WishItems>\n                ))} */}\n              </ul>\n            </React.Fragment>\n            )}\n        </section>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport WishList from '../WishList/WishList'\nimport { Link } from 'react-router-dom';\nimport SingleWish from '../SingleWish/SingleWish';\n\n//clase componente que renderiza los contenidos genéricos\n//usando rendering condicional y el componente Switch que ya conocéis podéis mostrar los contenidos oportunos que queráis\nclass Contents extends Component {\n  render() {\n    return (<div>\n        bla bla bla        \n      <WishList></WishList>\n     \n  </div>);\n    \n  }\n}\n\nexport default Contents;","import React from 'react';\nimport WishesService from '../../services/WishesService';\nimport { Link } from 'react-router-dom';\n\nexport default class SingleWish extends React.Component {\n  constructor(props){\n    super(props)\n    this.service = new WishesService()\n    this.state = {\n      wish: {}\n    }\n  }\n\n  componentDidMount(){\n    console.log(this.props.match.params)\n    this.service.getOneWish()\n    .then(response => {\n      //set state\n      console.log(response)\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"singlewish\">\n        {/* <img src={this.props.wish.image} /> */}\n        <p className=\"image\">{this.props.wish.image}</p>\n        <p className=\"title\">{this.props.wish.name}</p>\n        <p className=\"descrption\">{this.props.wish.description}</p>\n        <p className=\"price\">{this.props.wish.price}</p>\n        <p className=\"date\">{this.props.wish.date}</p>\n        <p className=\"deadline\">{this.props.wish.deadline}</p>\n       <p className=\"wishgranted\">{this.props.wish.wishGranted}</p>\n      </div>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./scss/App.scss\"\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Navbar from \"./components/navbar/Navbar\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\n\nimport Contents from \"./components/contents/Contents\";\nimport WishList from \"./components/WishList/WishList\";\nimport SingleWish from \"./components/SingleWish/SingleWish\";\nimport Wishitems from \"./components/WishItems/WishItems\";\nimport Finances from \"./components/Finances/Finances\";\n\nimport AuthService from \"./services/AuthService\";\nimport WishesService from \"./services/WishesService\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n\n    this.fetchUser()\n  }\n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj,\n    });\n  };\n\n  logout = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  fetchUser() {\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response,\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false,\n        });\n      });\n  }\n\n  componentDidMount() {\n    console.log(this.state)\n  }\n\n  render() {\n    //aqui hacemos rendering condicional dependiendo de si tenemos un usuario logeado o no\n    if (this.state.loggedInUser) {\n      return (\n        <React.Fragment>\n          <Redirect to=\"/\" />\n\n          <div className=\"App\">\n          <section class=\"logo-title\">\n            <img src=\"/images/stop2.png\"></img>\n            <h1>Shopaholic</h1>\n            </section>\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n              <Contents />\n              <Switch>\n\n                {/* <Route exact path =\"/all\" render = {() => <WishList></WishList>} /> */}\n                {/* <Route exact path =\"/:id\" render = {() => <SingleWish></SingleWish>}/> */}\n\n                <Route />\n             </Switch>\n            </header>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      //si no estás logeado, mostrar opcionalmente o login o signup\n      return (\n        <React.Fragment>\n          <Redirect to=\"/login\" />\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n              <Switch>\n                <Route exact path=\"/signup\" render={() => <Signup getUser={this.getUser} />} />\n                <Route exact path=\"/login\" render={() => <Login getUser={this.getUser} />} />\n              </Switch>\n            </header>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default App;","import React, {Component} from 'react';\n\nclass Finances extends Component {\n    render(){\n        return (\n            <div>\n                Hola soy tus finanzas\n            </div>\n        )\n    }\n}\n\nexport default Finances;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}